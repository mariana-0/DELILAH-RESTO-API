openapi: 3.0.0
info:
  title: Delilah-resto
  description: This is what you have to know to use the Delillah-resto's API.
  version: 1.0.0

servers: 
  - url: localhost

paths:
  /products:
    get:
      tags:
        - Products 
      summary: To return a products list
      parameters:
      - in: header
        name: authorization
        description: Authentication Token
        required: true
        schema:
          type: string
      responses:
        '200': 
          description: Succesful
          content:
            application/json:
              schema:
                type: array 
                items:
                  $ref: '#/components/schemas/product'
        '401':
          description: Unauthorized
    post:
      tags:
        - Products 
      summary: To add a new product. It must be added by a system administrator
      parameters:
      - in: header
        name: authorization
        description: Authentication Token
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/productadd'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/productadded'
        '400':
          description: Data are missing
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  
  /products/{id}:
    put:
      tags:
        - Products 
      summary: To update a product by id. It must be updated by a system administrator
      parameters:
      - in: header
        name: authorization
        description: Authentication Token
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Product ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/productadd'
      responses:
        '201':
          description: Succesful change
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/productupdated'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
            description: Not found
    delete: 
      tags:
        - Products 
      summary: To delete a product by id.It must be deleted by a system administrator
      parameters:
        - in: header
          name: authorization
          description: Authentication Token
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200': 
          description: Succesful 
          content:
            application/json:
              schema:
                type: array 
                items:
                  $ref: '#/components/schemas/product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
            description: Not found
    
  /users:
    get:
      tags:
        - Users 
      summary: To return an users list. Only system administrators can get it
      parameters:
        - in: header
          name: authorization
          description: Authentication Token
          required: true
          schema:
            type: string
      responses:
        '200': 
          description: Succesful
          content:
            application/json:
              schema:
                type: array 
                items:
                  $ref: '#/components/schemas/user' 
    post:
      tags:
        - Users
      summary: To add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/useradd'
      responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  type: array 
                  items:
                    $ref: '#/components/schemas/useradd'
          '400':
            description: Data are missing / User already exists
            
  /users/log_in:
    post:
      tags:
        - Users
      summary: To log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/userlogin'
      responses:
          '201':
            description: Token
          '400':
            description: Wrong email/password
            
  /orders:
    get:
      tags:
        - Orders
      summary: To return an orders list.Only system administrators can get it
      parameters:
        - in: header
          name: authorization
          description: Authentication Token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Seccesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ordersget'
    post:
      tags:
        - Orders
      summary: To create a new order
      parameters:
        - in: header
          name: authorization
          description: Authentication Token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/orderadd'
      responses:
        '201':
          description: Order added
        '404':
          description: User with id does not exist
        '400':
          description: Data are missing/ Product with id does not exist
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: To get the details of an specific order by id. Only the order owner or system administrator can get them.
      parameters:
        - name: id
          in: path
          description: order id
          required: true
          schema:
            type: integer
            format: int
        - in: header
          name: authorization
          description: Authentication Token
          required: true
          schema:
            type: string
      responses:
        '200':  
          description: Succesful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/orders'
        '404':
          description: Not found
    put: 
      tags:
        - Orders
      summary: To update the status of a created order by id. It must be updated by a system administrator
      parameters:
        - name: id
          in: path
          description: order id
          required: true
          schema:
            type: integer
            format: int64
        - in: header
          name: authorization
          description: Authentication Token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/orderstatus'
      responses:
          '201': 
            description: Updated
          '404':
            description: Not found
    delete: 
      tags:
        - Orders
      summary: To delete an order by id. It must deleted by a system administrator
      parameters:
        - name: id
          in: path
          description: order id
          required: true
          schema:
            type: integer
            format: int64
        - in: header
          name: authorization
          description: Authentication Token
          required: true
          schema:
            type: string
      responses:
          '200': 
            description: Deleted 
          '404':
            description: Not found
                
components:
  schemas:
  
    product:
      properties:
        product_id:
          type: integer
          description: Product ID
          example: 1
        product_name:
          type: string
          description: product name
          example: Special Hamburger
        product_price:
          type: number
          description: product price
          example: 999
          
    productadd:
      properties:
        product_name:
          type: string
          description: product name
          example: Special Hamburger
        product_price:
          type: number
          description: product price
          example: 999
          
    productadded:
      properties:
        status:
          type: string
          example: Created
        products: 
          type: array
          items:
            properties:
              product_name:
                type: string
                example: Special Hamburguer
              product_price:
                type: integer
                example: 999
    productupdated:
      properties:
        status:
          type: string
          example: Updated
        products: 
          type: array
          items:
            properties:
              product_name:
                type: string
                example: Special Hamburguer
              product_price:
                type: integer
                example: 999
    user:
      properties:
        user_id:
          type: integer
          description: user ID
          example: 1
        user_user:
          type: string
          description: user
          example: Pepe10pepino
        user_name:
          type: string
          description: Uer name
          example: Pepito
        user_lastname: 
          type: string
          description: User lastname
          example: Pepino
        user_email:
          type: string
          description: User email
          example: pepepepino@pepe.com
        user_phone_number:
          type: integer
          description: User phone number
          example: 1234
        user_address: 
          type: string
          description: User address
          example: 1 Street
        user_password:
          type: string
          description: User password
          example: soypepepepino
          
    useradd:
      properties:
        user_user:
          type: string
          description: user
          example: Pepe10pepino
        user_name:
          type: string
          description: Uer name
          example: Pepito
        user_lastname: 
          type: string
          description: User lastname
          example: Pepino
        user_email:
          type: string
          description: User email
          example: pepepepino@pepe.com
        user_phone_number:
          type: integer
          description: User phone number
          example: 1234
        user_address: 
          type: string
          description: User address
          example: 1 Street
        user_password:
          type: string
          description: User password
          example: soypepepepino
        is_admin:
          type: integer
          example: 1
          
    userlogin:
      properties:
        user_user:
          type: string
          description: user
          example: Pepe10pepino
        user_password:
          type: string
          description: User password
          example: soypepepepino
          
    ordersget:
      properties:
        order_id:
          type: integer
          description: Order ID
          example: 1
        order_status:
          type: string
          description: Order status
          example: Sent
        order_time:
          type: string
          description: Order hour
          example: '13:00'
        order_description:
          type: string
          description: Order description
          example: 1 Sp Hamb
        order_payment_method:
          type: string
          description: Order payment method
          example: cash
        order_total_paid:
          type: string
          description: Total paid
          example: "$660"
        id_user:
          type: integer
          description: user
          example: 1
        user_name:
          type: string
          description: Uer name
          example: Pepito
        user_lastname: 
          type: string
          description: User lastname
          example: Pepino
        user_address: 
          type: string
          description: User address
          example: 1 Street
    orders:
      properties:
        0:
          type: array
          items:
            type: object
            properties:
              product_name:
                type: string
                description: product name
                example: Special Hamburger
              product_price:
                type: number
                description: product price
                example: 330
              quantity_product:
                type: integer
                description: products amount
                example: 2
        order_total_paid:
          type: integer
          description: Total paid
          example: 660
        order_status:
          type: string
          description: Order status
          example: new
        order_payment_method:
          type: string
          description: Order payment method
          example: cash
        user_address: 
          type: string
          description: User address
          example: 1 Street
        user_name:
          type: string
          description: Uer name
          example: Pepito
        user_lastname: 
          type: string
          description: User lastname
          example: Pepino
        user_user:
          type: string
          description: user
          example: Pepe10pepino
        user_email:
          type: string
          description: User email
          example: pepepepino@pepe.com
        user_phone_number:
          type: integer
          description: User phone number
          example: 1234
    
    orderadd:
      properties:
        order_payment_method:
          type: string
          description: Order payment method
          example: cash
        items:
          type: array
          items:
            type: object
            properties:
              product_amount:
                type: integer
                description: products amount
                example: 2
              product_name:
                type: string
                description: product name
                example: Special Hamburger
        id_user: 
          type: integer
          description: User id
          example: 1
          
    orderstatus:
      properties:
        order_status:
          type: string
          description: Order status
          example: new
          
      
        
        
              
        
        
                
              
            
          
        
          
          
        
          